{"version":3,"sources":["../../../build/js/tinymce/form-handler.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","module","selfCalling","ithoughts","$","$d","$w","itge","iThoughtsTooltipGlossaryEditor","ready","onDocumentReady","formType","error","initTab","jqobj","cb","click","onClickTab","parent","find","removeClass","addClass","index","children","filter","initTipForm","tooltipOpts","callback","prop","on","switchMode","id","value","hide","show","keyup","removeEditor","editorId","tinymce","EditorManager","execCommand","iThoughtsTooltipGlossary","warn","editors","findEditor","editor","closeForm","data","setTimeout","waitRemoveEditor","finishTipTinymce","initSubEditor","$editors","each","findNewEditor","getAttribute","newId","Math","random","toString","replace","substr","setAttribute","text","init","selector","menubar","external_plugins","base_tinymce","wordcount","plugins","toolbar","min_height","height","resize","intervalContent","setInterval","waitSubTinyMCELoaded","subeditor","get","getDoc","getBody","log","JSON","stringify","clearInterval","setContent","selectImage","mediaFrame","wp","media","frame","state","library","type","multiple","insertImage","json","first","toJSON","val","url","link","html","caption","open","initAutoComplete","input","completerHolder","completerHolderContainer","searchedString","request","losefocustest","waitedForFocus","is","searchMatchingRes","startsWith","contains","terms","map","mapTerms","element","indx","title","toLowerCase","indexOf","slug","push","searchResults","concat","unique","item","pos","self","empty","thislang","append","parseHTML","content","resizeWindow","selectCompletion","currentTarget","top","offset","scrollTop","bottom","css","maxHeight","focusin","abort","removeAccents","$nonce","ajax","admin_ajax","method","dataType","action","search","_ajax_nonce","complete","res","response","responseJSON","success","nonce_refresh","searched","info","removeAttribute","initAdvancedConfiguration","$opts","$tooltip","skip","span","$form","getOptsObject","form","formElems","elements","tristates","valid","formFields","attributes","attributesList","getAttributeValue","toArray","opts","types","validity","focus","getTristateValue","extend","serializeInputsObject","dataset","serializeObject","arrK","arrV","j","J","min","prefix","filterPrototypeInputs","closest","checkRemoveAttr","thisInput","$container","otherInput","filterNotThisInput","ensureRemoveContainer","attr","trim","document","activeElement","remove","attrVal","change","onTristateChange","ts","checked","indeterminate","showAttributesWindow","closeDiscardAttributesWindow","closeAcceptAttributesWindow","onQtipKeepOpenChange","modeInput","textInput","mtInput","oldValue","lockQtipTrigger","disabled","onPositionMyChange","base","inputV","inputH","inputsHV","inputS","changePositionMy","onPositionAtChange","bind","onKvPairAdd","$invalidInputs","eq","$prototype","$clone","clone","newIdParts","Date","getTime","setForOrId","$this","hasClass","tagName","blur","videoUrlChanged","videodata","formatType","formats","youtube","regex","embed","video","dailymotion","direct","match","validate","glossary_id","disable_auto_translation","tooltip_content","getContent","mediatip_type","mediatip_content","mediatip_caption","mediatip_link","initListForm","initGroupsPicker","$ids","$text","$groupsPicker","$catchEvent","$checkboxes","onGroupsPickerFocus","toggleClass","catchEvent","stopImmediatePropagation","off","one","onGroupCheckboxChanged","$checked","texts","ids","checkedAppendToArray","join","onClickValidate","alpha","group","desc","cols","finishListTinymce","onClickDiscard","iThoughts","v5"],"mappings":"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","file":"form-handler.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @file Client-side scripts for handling tooltip creation wizzard in Wordpress TinyMCE\n *\n * @author Gerkin\n * @copyright 2016 GerkinDevelopment\n * @license https://www.gnu.org/licenses/gpl-3.0.html GPLv3\n * @package ithoughts-tooltip-glossary\n *\n * @version 2.7.0\n */\n\n'use strict';\n\n/*global tinymce:false, iThoughtsTooltipGlossaryEditor: false */\n\n( function selfCalling( ithoughts ) {\n\n\t// As usual, assign our most comon globals usage to local ones for minification\n\tvar $\t\t= ithoughts.$,\n\t\t$d\t\t= ithoughts.$d,\n\t\t$w\t\t= ithoughts.$w,\n\t\titge\t= iThoughtsTooltipGlossaryEditor;\n\t$d.ready( function onDocumentReady() {\n\t\tvar formType = '';\n\t\t// Depending on the ID present, we can deduce if we are in TIP or LIST creation/edition mode.\n\t\tif ( 1 === $( '#ithoughts_tt_gl-tooltip-form-container' ).length ) {\n\t\t\tformType = 'TIP';\n\t\t} else if ( 1 === $( '#ithoughts_tt_gl-list-form-container' ).length ) {\n\t\t\tformType = 'LIST';\n\t\t} else {\n\t\t\titge.error( 'Does not contains a tooltip form nor a list form, exit' );\n\t\t\treturn;\n\t\t}\n\n\t\t// ##### `initTab`: Set up a tab switcher element\n\t\t/**\n\t\t * @function initTab\n\t\t * @description Set up a tab switcher element\n\t\t * @author Gerkin\n\t\t * @param {jQuery} jqobj jQuery selector containing the tabs triggers\n\t\t * @param {Function} [cb] Function to execute with cb( newIndex )\n\t\t * @returns {undefined}\n\t\t */\n\t\tfunction initTab( jqobj, cb ) {\n\t\t\tjqobj.click( function onClickTab() {\n\t\t\t\t// First, clean the `active` class on all siblings, then set it only on event emitter\n\t\t\t\t$( this ).parent().find( '.active' ).removeClass( 'active' );\n\t\t\t\t$( this ).addClass( 'active' );\n\n\t\t\t\t// Then, we check the index of the clicked element (`this`) in the parent, and we set active the tab with the same index\n\t\t\t\tvar index = $( this ).index();\n\t\t\t\t$( this ).parent().parent().find( ' > .active' ).removeClass( 'active' );\n\t\t\t\t$( $( this ).parent().parent().children()[index + 1]).addClass( 'active' );\n\n\t\t\t\t// Then we try to call the callback (if set)\n\t\t\t\tcb && cb( index );\n\t\t\t});\n\t\t\t// Self-set\n\t\t\tjqobj.filter( '.active' ).click();\n\t\t}\n\n\t\t// ## Tip form\n\t\tif ( 'TIP' === formType ) {\n\t\t\t( function initTipForm() {\n\t\t\t\t// Define the container for tooltip options in parent scope, so it can be used accross several events\n\t\t\t\tvar tooltipOpts;\n\t\t\t\t// Initialize the tab switcher between mode Glossary, Tooltip & Mediatip\n\t\t\t\tinitTab( $( '#ithoughts_tt_gl-tooltip-form .tabs li' ), function callback( index ) {\n\t\t\t\t\t// Only Glossary tooltip (tab @ index 0) disable the custom link editor\n\t\t\t\t\t$( '#ithoughts_tt_gl_link' ).prop( 'disabled', 0 === index );\n\t\t\t\t});\n\t\t\t\t// Initialize the tab switcher of advanced options\n\t\t\t\tinitTab( $( '#ithoughts_tt_gl-tooltip-form-options .tabs li' ));\n\t\t\t\t// Mode switcher for mediatips.  Hide all except the selected mode\n\t\t\t\t$( '.modeswitcher' ).on( 'click keyup change', function switchMode() {\n\t\t\t\t\tvar id = this.id;\n\t\t\t\t\t$( `[data-${  id  }]:not([data-${  id  }=\"mediatip-${  this.value  }-type\"])` ).hide();\n\t\t\t\t\t$( `[data-${  id  }~=\"mediatip-${  this.value  }-type\"]` ).show();\n\t\t\t\t}).keyup();\n\n\t\t\t\t// ##### `removeEditor`: Clean an editor\n\t\t\t\t/**\n\t\t\t\t * @function removeEditor\n\t\t\t\t * @description Clean an editor\n\t\t\t\t * @author gerkin\n\t\t\t\t * @param   {String} editorId Id of the editor to delete\n\t\t\t\t * @returns {undefined}\n\t\t\t\t */\n\t\t\t\tfunction removeEditor( editorId ) {\n\t\t\t\t\t// Sometimes (depending on the browser AFAIK), TinyMCE fails to execute the command to remove an editor. We then have to clean its data manually\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttinymce.EditorManager.execCommand( 'mceRemoveEditor', true, editorId );\n\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\tiThoughtsTooltipGlossary.warn( 'Force cleaning needed: ', e );\n\t\t\t\t\t\ttinymce.EditorManager.editors = tinymce.EditorManager.editors.filter( function findEditor( editor ) {\n\t\t\t\t\t\t\treturn editor.id !== editorId;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ##### `closeForm`: Clean the form, then call the callback function\n\t\t\t\t/**\n\t\t\t\t * @function closeForm\n\t\t\t\t * @description Clean the form, then call the callback function\n\t\t\t\t * @author gerkin\n\t\t\t\t * @param {Object} data Data of the tooltip\n\t\t\t\t * @returns {undefined}\n\t\t\t\t */\n\t\t\t\tfunction closeForm( data ) {\n\t\t\t\t\tsetTimeout( function waitRemoveEditor() {\n\t\t\t\t\t\tremoveEditor( 'ithoughts_tt_gl-tooltip-content' );\n\t\t\t\t\t}, 500 );\n\t\t\t\t\titge.finishTipTinymce( data );\n\t\t\t\t}\n\n\t\t\t\t// ### TinyMCE editor for Tooltips\n\t\t\t\t( function initSubEditor( $editors ) {\n\t\t\t\t\t// Initialize the TinyMCE editor inside the Tooltip tab\n\t\t\t\t\t$editors.each( function findNewEditor( index, editor ) {\n\t\t\t\t\t\t// Find a free id. If our editor does not have an ID, we have to generate one\n\t\t\t\t\t\twhile ( null == editor.getAttribute( 'id' )) {\n\t\t\t\t\t\t\tvar newId = `editor${  Math.random().toString( 36 ).replace( /[^a-z]+/g, '' ).substr( 0, 10 ) }`;\n\t\t\t\t\t\t\t// If this editor ID is free, then set it. Else, loop using the parent `while`\n\t\t\t\t\t\t\tif ( 0 === $( newId ).length ) {\n\t\t\t\t\t\t\t\teditor.setAttribute( 'id', newId );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar editorId = editor.getAttribute( 'id' );\n\t\t\t\t\t\t// Save the current text in the not-yet-TinyMCE editor. It will be used later to restore the content\n\t\t\t\t\t\tvar text = editor.value;\n\t\t\t\t\t\t// Do effective call to tinymce & init the editor\n\t\t\t\t\t\ttinymce.init({\n\t\t\t\t\t\t\tselector:         `#${  editorId }`,\n\t\t\t\t\t\t\tmenubar:          false,\n\t\t\t\t\t\t\texternal_plugins: {\n\t\t\t\t\t\t\t\tcode:      `${ itge.base_tinymce  }/code/plugin.min.js`,\n\t\t\t\t\t\t\t\twordcount: `${ itge.base_tinymce  }/wordcount/plugin.min.js`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tplugins: 'wplink',\n\t\t\t\t\t\t\ttoolbar: [\n\t\t\t\t\t\t\t\t'styleselect | bold italic underline link | bullist numlist | alignleft aligncenter alignright alignjustify | code',\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tmin_height: 70,\n\t\t\t\t\t\t\theight:     70,\n\t\t\t\t\t\t\tresize:     false,\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// **Restore the content**\n\t\t\t\t\t\tvar intervalContent = setInterval( function waitSubTinyMCELoaded() {\n\t\t\t\t\t\t\tvar subeditor = tinymce.get( editorId );\n\t\t\t\t\t\t\t// Check if the subeditor is fully initialized. If that's the case, set its content & clear interval\n\t\t\t\t\t\t\tif ( subeditor && subeditor.getDoc() && subeditor.getBody()) {\n\t\t\t\t\t\t\t\titge.log( 'Initing subeditor with content ', JSON.stringify( text ));\n\t\t\t\t\t\t\t\tclearInterval( intervalContent );\n\t\t\t\t\t\t\t\tsubeditor.setContent( text.replace( /&/g, '&amp;' ));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 50 );\n\t\t\t\t\t});\n\t\t\t\t}( $( '#ithoughts_tt_gl-tooltip-form-container .tinymce' )));\n\n\t\t\t\t// ### Media library for Mediatips\n\t\t\t\t$( '#ithoughts_tt_gl_select_image' ).click( function selectImage() {\n\t\t\t\t\t// On click on `#ithoughts_tt_gl_select_image` (the button in mediatip), use the WP media API to get a media\n\t\t\t\t\t// > This code was copy/pasted. It may be improveable\n\t\t\t\t\tvar mediaFrame = wp.media({\n\t\t\t\t\t\tframe:   'post',\n\t\t\t\t\t\tstate:   'insert',\n\t\t\t\t\t\tlibrary: {\n\t\t\t\t\t\t\ttype: [ 'audio', 'video', 'image' ],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmultiple: false,\n\t\t\t\t\t});\n\n\t\t\t\t\t// **On validation of media library**\n\t\t\t\t\tmediaFrame.on( 'insert', function insertImage() {\n\t\t\t\t\t\t// Get the infos of the first selected element\n\t\t\t\t\t\tvar json = mediaFrame.state().get( 'selection' ).first();\n\t\t\t\t\t\t// If nothing selected, return\n\t\t\t\t\t\tif ( null == json ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjson = json.toJSON();\n\t\t\t\t\t\t// Encode datas in the JSON input\n\t\t\t\t\t\t$( '#image-box-data' ).val( JSON.stringify({\n\t\t\t\t\t\t\turl:  json.url,\n\t\t\t\t\t\t\tid:   json.id,\n\t\t\t\t\t\t\tlink: json.link,\n\t\t\t\t\t\t}));\n\t\t\t\t\t\t// Display selected image\n\t\t\t\t\t\t$( '#image-box' ).html( `<img src=\"${  json.url  }\"/>` );\n\t\t\t\t\t\t$( '#mediatip_caption' ).val( json.caption );\n\t\t\t\t\t\t$( '#ithoughts_tt_gl_link' ).val( json.link );\n\t\t\t\t\t});\n\n\t\t\t\t\t// Open the media library\n\t\t\t\t\tmediaFrame.open();\n\t\t\t\t});\n\n\t\t\t\t// ### Autocomplete for Glossaries\n\t\t\t\t( function initAutoComplete() {\n\t\t\t\t\tvar input = $( '#glossary_term' ),\n\t\t\t\t\t\tcompleterHolder = $( '#glossary_term_completer' ),\n\t\t\t\t\t\tcompleterHolderContainer = $( '.glossary_term_completer_container' ),\n\t\t\t\t\t\tsearchedString = '',\n\t\t\t\t\t\trequest = null;\n\n\t\t\t\t\t// ##### `losefocustest`: Check if the completer holder or the input has the focus\n\t\t\t\t\tfunction losefocustest() {\n\t\t\t\t\t\t// The timeout is required to let some time to the browser to change the focus status of the elements\n\t\t\t\t\t\tsetTimeout( function waitedForFocus() {\n\t\t\t\t\t\t\tif ( !completerHolder.find( '*:focus' ).length && !input.is( ':focus' )) {\n\t\t\t\t\t\t\t\t// Hide the `completerHolder`\n\t\t\t\t\t\t\t\tcompleterHolderContainer.addClass( 'hidden' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 100 );\n\t\t\t\t\t}\n\t\t\t\t\t// ##### `searchMatchingRes`: Does all the completion work from retrieved term catalog\n\t\t\t\t\tfunction searchMatchingRes() {\n\t\t\t\t\t\t// First, we filter terms contained in the global hash `iThoughtsTooltipGlossaryEditor`. Those terms will be splitted in 2 categories:\n\t\t\t\t\t\t// * those which **starts** with the searched string\n\t\t\t\t\t\t// * those which **contains** the searched string\n\t\t\t\t\t\tvar startsWith = [];\n\t\t\t\t\t\tvar contains = [];\n\t\t\t\t\t\titge.terms.map( function mapTerms( element ) {\n\t\t\t\t\t\t\tvar indx = element.title.toLowerCase().indexOf( searchedString );\n\t\t\t\t\t\t\tif ( -1 === indx )\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tindx = element.slug.toLowerCase().indexOf( searchedString );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( -1 === indx ) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else if ( 0 === indx ) {\n\t\t\t\t\t\t\t\tstartsWith.push( element );\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontains.push( element );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Then, concat both arrays to have the terms starting with the search before those who just contains the search\n\t\t\t\t\t\tvar searchResults = startsWith.concat( contains ).filter( function unique( item, pos, self ) {\n\t\t\t\t\t\t\treturn self.indexOf( item ) === pos;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Clean the search result container, then re-fill it with items\n\t\t\t\t\t\tcompleterHolder.empty();\n\t\t\t\t\t\tvar length = searchResults.length;\n\t\t\t\t\t\tif ( length > 0 ) {\n\t\t\t\t\t\t\tfor ( var i = 0; i < length; i++ ) {\n\t\t\t\t\t\t\t\tvar item = searchResults[i];\n\t\t\t\t\t\t\t\t// If WPML is installed, `item` should contain the property `thislang`. If `thislang` is set to false, then the term is in another language than the current one, and we display it with a particular class\n\t\t\t\t\t\t\t\tif ( typeof item.thislang != 'undefined' && false === item.thislang )\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcompleterHolder.append( $.parseHTML( `<div tabindex=\"0\" class=\"option foreign-language\" data-id=\"${  item.id  }\" data-excerpt=\"${  item.content  }\"><p><b>${  item.title  }</b><br><em>${  item.slug  }</em></p></div>` ));\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\telse\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcompleterHolder.append( $.parseHTML( `<div tabindex=\"0\" class=\"option\" data-id=\"${  item.id  }\" data-excerpt=\"${  item.content  }\"><p><b>${  item.title  }</b><br><em>${  item.slug  }</em></p></div>` ));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcompleterHolder.append( $.parseHTML( '<p style=\"text-align:center\"><em>No results</em><p>' ));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Once we have filled the search result container, display it and recalculate position\n\t\t\t\t\t\tcompleterHolderContainer.removeClass( 'hidden' );\n\t\t\t\t\t\tsetTimeout( resizeWindow, 25 );\n\t\t\t\t\t\t// On each result, make them selectable\n\t\t\t\t\t\tcompleterHolder.find( '.option' ).on( 'click', function selectCompletion( e ) {\n\t\t\t\t\t\t\t// Set inputs with values provided by the option, then hide the completer holder\n\t\t\t\t\t\t\t$( '[name=\"glossary_term_id\"]' ).val( e.currentTarget.getAttribute( 'data-id' ));\n\t\t\t\t\t\t\tinput.val( $( e.currentTarget ).find( 'p > b' ).text());\n\t\t\t\t\t\t\tcompleterHolderContainer.addClass( 'hidden' );\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// ##### `resizeWindow`: Set styles of the completer holder\n\t\t\t\t\tfunction resizeWindow() {\n\t\t\t\t\t\t// The `completerHolder` element has to be positionned by JS. In fact, to overflow outside from the modal, it must not be a descendent of the modal. Thus, we can't position it via CSS\n\t\t\t\t\t\tvar top = completerHolder.offset().top - $w.scrollTop();\n\t\t\t\t\t\tvar bottom = $w.height();\n\t\t\t\t\t\tvar height = bottom - top;\n\t\t\t\t\t\tcompleterHolderContainer.css({\n\t\t\t\t\t\t\tmaxHeight: height,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t$w.resize( resizeWindow );\n\n\t\t\t\t\t// **Execute the search action**\n\t\t\t\t\tinput.on( 'keyup focusin', function focusin() {\n\t\t\t\t\t\t// First, check if we don't have any request currently running. If we have one, we have to `abort()` it\n\t\t\t\t\t\tif ( request )\t\t\t\t\t\t{\n\t\t\t\t\t\t\trequest.abort();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Then, compose the search string by removing accents or special characters\n\t\t\t\t\t\tsearchedString = itge.removeAccents( $( this ).val().toLowerCase());\n\t\t\t\t\t\t// Filter with already retrieved items. This is used to react before the real request is sent, then resulsq will be replaced with new retrieved ones\n\t\t\t\t\t\tsearchMatchingRes();\n\t\t\t\t\t\t// Do the request to get elements\n\t\t\t\t\t\tconst $nonce = $( '#ithoughts_tt_gl-tooltip-form-container [name=\"_wpnonce\"]' );\n\t\t\t\t\t\trequest = $.ajax({\n\t\t\t\t\t\t\turl:      itge.admin_ajax,\n\t\t\t\t\t\t\tmethod:   'POST',\n\t\t\t\t\t\t\tdataType: 'json',\n\t\t\t\t\t\t\tdata:     {\n\t\t\t\t\t\t\t\taction:      'ithoughts_tt_gl_get_terms_list',\n\t\t\t\t\t\t\t\tsearch:      searchedString,\n\t\t\t\t\t\t\t\t_ajax_nonce: $nonce.val(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcomplete: function complete( res ) {\n\t\t\t\t\t\t\t\tvar response = res.responseJSON;\n\t\t\t\t\t\t\t\tif ( 'undefined' == typeof response || !response.success )\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$nonce.val( response.data.nonce_refresh );\n\t\t\t\t\t\t\t\t// Check if the response contains a different search string as the current one. It serves as an *outdated filter*\n\t\t\t\t\t\t\t\tif ( response.data.searched !== searchedString ) {\n\t\t\t\t\t\t\t\t\tiThoughtsTooltipGlossary.info( 'Outdated response' );\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Store terms, then refresh completions\n\t\t\t\t\t\t\t\titge.terms = response.data.terms;\n\t\t\t\t\t\t\t\tsearchMatchingRes();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}).on( 'focusout', losefocustest ).on( 'keyup', function keyup() {\n\t\t\t\t\t\tthis.removeAttribute( 'data-term-id' );\n\t\t\t\t\t});\n\t\t\t\t}());\n\n\t\t\t\t// ### Set up Advanced Configuration\n\t\t\t\t( function initAdvancedConfiguration() {\n\t\t\t\t\tvar $opts = $( '#ithoughts_tt_gl-tooltip-form-options' ),\n\t\t\t\t\t\t$tooltip = $( '#ithoughts_tt_gl-tooltip-form' ),\n\t\t\t\t\t\tskip = {\n\t\t\t\t\t\t\tspan: false,\n\t\t\t\t\t\t\tlink: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$form = $( '#ithoughts_tt_gl-tooltip-form-options form' );\n\n\t\t\t\t\t// ##### `getOptsObject`: Get the advanced configuration object\n\t\t\t\t\t/**\n\t\t\t\t\t * @function getOptsObject\n\t\t\t\t\t * @author agermain\n\t\t\t\t\t * @returns {Object} Advanced Opts objects\n\t\t\t\t\t */\n\t\t\t\t\tfunction getOptsObject() {\n\t\t\t\t\t\tvar form = $form[0],\n\t\t\t\t\t\t\tformElems = form.elements,\n\t\t\t\t\t\t\ttristates = {},\n\t\t\t\t\t\t\tvalid = true,\n\t\t\t\t\t\t\tformFields = formElems.length,\n\t\t\t\t\t\t\ti = -1,\n\t\t\t\t\t\t\tattributes = {},\n\t\t\t\t\t\t\tattributesList = $( '#attributes-list option' ).map( function getAttributeValue() {\n\t\t\t\t\t\t\t\treturn this.value;\n\t\t\t\t\t\t\t}).toArray(),\n\t\t\t\t\t\t\topts,\n\t\t\t\t\t\t\ttypes = [ 'span', 'link' ];\n\t\t\t\t\t\t// Check the validity in the whole form\n\t\t\t\t\t\twhile ( ++i < formFields && valid ) {\n\t\t\t\t\t\t\tvar validity = formElems[i].validity;\n\t\t\t\t\t\t\tvalid &= validity.valid;\n\t\t\t\t\t\t\tif ( !validity.valid ) {\n\t\t\t\t\t\t\t\tformElems[i].focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get tristate values to override default booleans\n\t\t\t\t\t\t$form.find( '.ithoughts-tristate' ).each( function getTristateValue() {\n\t\t\t\t\t\t\t$.extend( true, tristates, $( this ).serializeInputsObject({\n\t\t\t\t\t\t\t\t'-1': false,\n\t\t\t\t\t\t\t\t0:    null,\n\t\t\t\t\t\t\t\t1:    true,\n\t\t\t\t\t\t\t}[this.dataset.state]));\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Once we have retrieved all tristate states, we just have to inject it in the form values\n\t\t\t\t\t\topts = $.extend( true, $form.serializeObject(), tristates );\n\n\t\t\t\t\t\t// Get the key-value attributes on both link & span\n\t\t\t\t\t\tfor ( i = 0; i < 2; i++ ) {\n\t\t\t\t\t\t\tvar type = types[i];\n\t\t\t\t\t\t\t// Create the store\n\t\t\t\t\t\t\tattributes[type] = {};\n\t\t\t\t\t\t\t// Iterate on each category to get the value\n\t\t\t\t\t\t\tfor ( var arrK = opts[`attributes-${  type  }-key`] || [], arrV = opts[`attributes-${  type  }-value`] || [], j = 0, J = Math.min( arrK.length, arrV.length ); j < J; j++ ) {\n\t\t\t\t\t\t\t\tif ( arrK[j] && arrV[j]) {\n\t\t\t\t\t\t\t\t\t// If the key is not in the list of standard DOM attributes, we have to prefix it\n\t\t\t\t\t\t\t\t\tvar prefix = attributesList.indexOf( arrK[j]) > -1 ? '' : 'data-';\n\t\t\t\t\t\t\t\t\tattributes[type][prefix + arrK[j]] = arrV[j];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Clean the options object afterwars\n\t\t\t\t\t\t\tdelete opts[`attributes-${  type  }-value`];\n\t\t\t\t\t\t\tdelete opts[`attributes-${  type  }-key`];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Add the attributes in the options object, then return it;\n\t\t\t\t\t\topts['attributes'] = attributes;\n\t\t\t\t\t\treturn opts;\n\t\t\t\t\t}\n\t\t\t\t\t// ##### `filterPrototypeInputs`: Used in filter to ignore if the element is a prototype. Used in key-value handlings\n\t\t\t\t\t/**\n\t\t\t\t\t * @function filterPrototypeInputs\n\t\t\t\t\t * @description Filtering function for prototypes. Used in key-value handlings\n\t\t\t\t\t * @author gerkin\n\t\t\t\t\t * @returns {Boolean} True if this element is not a prototype\n\t\t\t\t\t */\n\t\t\t\t\tfunction filterPrototypeInputs() {\n\t\t\t\t\t\treturn 0 === $( this ).closest( '.ithoughts-prototype' ).length;\n\t\t\t\t\t}\n\t\t\t\t\t// ##### `checkRemoveAttr`: Remove unused key/value pairs from the key/value editor\n\t\t\t\t\t/**\n\t\t\t\t\t * @function checkRemoveAttr\n\t\t\t\t\t * @description Remove unused key/value pairs from the key/value editor\n\t\t\t\t\t * @author gerkin\n\t\t\t\t\t * @returns {undefined}\n\t\t\t\t\t */\n\t\t\t\t\tfunction checkRemoveAttr() {\n\t\t\t\t\t\t// Separate the current event emitter event from other input\n\t\t\t\t\t\tvar thisInput = $( this ),\n\t\t\t\t\t\t\t$container = thisInput.parent().parent(),\n\t\t\t\t\t\t\totherInput = $container.find( 'input' ).filter( function filterNotThisInput() {\n\t\t\t\t\t\t\t\treturn this !== thisInput.get( 0 );\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Wait to let some time to the browser\n\t\t\t\t\t\tsetTimeout( function ensureRemoveContainer() {\n\t\t\t\t\t\t\tvar type = thisInput.closest( '.ithoughts-attrs-container' ).attr( 'data-attr-family' );\n\t\t\t\t\t\t\t// Test & clean the `skip` flag if required\n\t\t\t\t\t\t\tif ( skip[type]) {\n\t\t\t\t\t\t\t\tskip[type] = false;\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Filter values\n\t\t\t\t\t\t\tthisInput.val( thisInput.val().trim());\n\t\t\t\t\t\t\totherInput.val( otherInput.val().trim());\n\n\t\t\t\t\t\t\t// If both values are empty & none have the focus, then remove the container\n\t\t\t\t\t\t\tif ( !thisInput.val() && !otherInput.val() && document.activeElement !== thisInput.get( 0 ) && document.activeElement !== otherInput.get( 0 )) {\n\t\t\t\t\t\t\t\t$container.remove();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 100 );\n\t\t\t\t\t}\n\n\t\t\t\t\t$opts.find( 'input[type=\"checkbox\"].ithoughts-tristate' ).attr( 'data-state', function getTristateValue( i, attrVal ) {\n\t\t\t\t\t\treturn (( attrVal || 0 ) - 1 ) % 3 + 2;\n\t\t\t\t\t}).change( function onTristateChange() {\n\t\t\t\t\t\t// Do the state rotation\n\t\t\t\t\t\tvar s = $( this ),\n\t\t\t\t\t\t\tts = (( s.attr( 'data-state' ) || 0 ) - 2 ) % 3 + 1;\n\t\t\t\t\t\ts.attr( 'data-state', ts );\n\t\t\t\t\t\tthis.checked = 1 === ts;\n\t\t\t\t\t\tthis.indeterminate = 0 === ts;\n\t\t\t\t\t}).change();\n\t\t\t\t\t// Bind GUI to show, close or save options\n\t\t\t\t\t$( '#ithoughts_tt_gl-tinymce-advanced_options' ).click( function showAttributesWindow() {\n\t\t\t\t\t\t$opts.show();\n\t\t\t\t\t\t$tooltip.hide();\n\t\t\t\t\t});\n\t\t\t\t\t$( '#ithoughts_tt_gl-tinymce-close-attrs' ).click( function closeDiscardAttributesWindow() {\n\t\t\t\t\t\t$opts.hide();\n\t\t\t\t\t\t$tooltip.show();\n\t\t\t\t\t});\n\t\t\t\t\t$( '#ithoughts_tt_gl-tinymce-validate-attrs' ).click( function closeAcceptAttributesWindow() {\n\t\t\t\t\t\ttooltipOpts = getOptsObject();\n\t\t\t\t\t\t$opts.hide();\n\t\t\t\t\t\t$tooltip.show();\n\t\t\t\t\t});\n\t\t\t\t\t// Bind events for the option that keep the tip opened for some times before closing\n\t\t\t\t\t$( '#qtip-keep-open' ).change( function onQtipKeepOpenChange() {\n\t\t\t\t\t\tvar modeInput = $( '#qtiptrigger' ),\n\t\t\t\t\t\t\ttextInput = $( '#qtiptriggerText' ),\n\t\t\t\t\t\t\tmtInput = $([ modeInput, textInput ]),\n\t\t\t\t\t\t\toldValue;\n\t\t\t\t\t\t// This option force the opening event to be `click`\n\t\t\t\t\t\treturn function lockQtipTrigger() {\n\t\t\t\t\t\t\tmodeInput.prop( 'disabled', this.checked );\n\t\t\t\t\t\t\ttextInput.prop( 'disabled', !this.checked );\n\t\t\t\t\t\t\tmtInput.val( this.checked ? 'click' : oldValue );\n\t\t\t\t\t\t\tif ( this.checked ) {\n\t\t\t\t\t\t\t\toldValue = modeInput.value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmodeInput.disabled = !( textInput.disabled = true );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}());\n\t\t\t\t\t// Bind Position selects\n\t\t\t\t\t$( '[name^=\"position[my]\"]' ).change( function onPositionMyChange() {\n\t\t\t\t\t\tvar base = '#position[my][',\n\t\t\t\t\t\t\tinputV = $( `${ base  }1]` ),\n\t\t\t\t\t\t\tinputH = $( `${ base  }2]` ),\n\t\t\t\t\t\t\tinputsHV = $( inputH.get( 0 ), inputV.get( 0 )),\n\t\t\t\t\t\t\tinputS = $( `${ base  }invert]` );\n\t\t\t\t\t\treturn function changePositionMy() {\n\t\t\t\t\t\t\tinputsHV.prop( 'required', inputV.val() || inputH.val() || inputS.prop( 'checked' ));\n\t\t\t\t\t\t};\n\t\t\t\t\t}());\n\t\t\t\t\t$( '[name^=\"position[at]\"]' ).change( function onPositionAtChange() {\n\t\t\t\t\t\tvar base = '#position[at][',\n\t\t\t\t\t\t\tinputV = $( `${ base  }1]` ),\n\t\t\t\t\t\t\tinputH = $( `${ base  }2]` ),\n\t\t\t\t\t\t\tinputsHV = $( inputH.get( 0 ), inputV.get( 0 ));\n\t\t\t\t\t\treturn function changePositionMy() {\n\t\t\t\t\t\t\tinputsHV.prop( 'required', inputV.val() || inputH.val());\n\t\t\t\t\t\t};\n\t\t\t\t\t}());\n\t\t\t\t\t// Initialize key/value pairs\n\t\t\t\t\t$( '.kv-pair-link-attrs-add,.kv-pair-span-attrs-add' ).bind( 'mouseup touchend', function onKvPairAdd() {\n\t\t\t\t\t\tvar $container = $( this ).parent().find( '.ithoughts-attrs-container' ),\n\t\t\t\t\t\t\t$invalidInputs = $container.find( 'input:invalid' ).filter( filterPrototypeInputs ),\n\t\t\t\t\t\t\ttype = $container.attr( 'data-attr-family' );\n\t\t\t\t\t\tskip[type] = true;\n\n\t\t\t\t\t\t// Check if every empty pairs are deleted\n\t\t\t\t\t\tif ( $invalidInputs.length > 0 ) {\n\t\t\t\t\t\t\tskip[type] = true;\n\t\t\t\t\t\t\t$invalidInputs.eq( 0 ).focus();\n\t\t\t\t\t\t\tcheckRemoveAttr.call( $invalidInputs.get( 0 ));\n\t\t\t\t\t\t\tskip[type] = false;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar $prototype = $container.find( '.ithoughts-prototype' ),\n\t\t\t\t\t\t\t$clone = $prototype.clone().removeClass( 'ithoughts-prototype' ),\n\t\t\t\t\t\t\tnewIdParts = [\n\t\t\t\t\t\t\t\t`attributes-${ type }-`,\n\t\t\t\t\t\t\t\t`-${ new Date().getTime() }`,\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t// Set the id/for attribute in the template\n\t\t\t\t\t\t$clone.find( '.dynamicId' ).each( function setForOrId() {\n\t\t\t\t\t\t\tvar $this = $( this ),\n\t\t\t\t\t\t\t\tnewId = newIdParts[0] + ( $this.hasClass( 'dynamicId-key' ) ? 'key' : 'value' ) + newIdParts[1];\n\t\t\t\t\t\t\t$this.attr( 'LABEL' === this.tagName ? 'for' : 'id', newId );\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$container.append( $clone );\n\t\t\t\t\t\t// Enable inputs, then focus the first one\n\t\t\t\t\t\t$clone.find( 'input' ).prop( 'required', true ).prop( 'disabled', false ).blur( checkRemoveAttr ).eq( 0 ).focus();\n\t\t\t\t\t\tcheckRemoveAttr.call( $clone.find( 'input' ).get( 0 ));\n\t\t\t\t\t});\n\t\t\t\t\t$( '.ithoughts-attrs-container input' ).blur( checkRemoveAttr );\n\t\t\t\t\ttooltipOpts = getOptsObject();\n\t\t\t\t})();\n\n\t\t\t\t// This event listener generate a different tag with a different base url depending on the source of the video.\n\t\t\t\t$( '#mediatip_url_video_link' ).bind( 'keyup mouseup change click focusin focusout', function videoUrlChanged() {\n\t\t\t\t\tvar videodata = null,\n\t\t\t\t\t\tvalue = this.value,\n\t\t\t\t\t\tformatType;\n\t\t\t\t\t// Configure sources. See below for usage of those config objects\n\t\t\t\t\tvar formats = {\n\t\t\t\t\t\tyoutube: {\n\t\t\t\t\t\t\tregex: /^(?:https?:\\/\\/(?:youtu\\.be\\/|\\w*\\.youtube\\.\\w{2,3}\\/watch\\?v=)|<iframe .*?src=\"https?:\\/\\/\\w*\\.youtube\\.\\w{2,3}\\/embed\\/)([a-zA-Z0-9]*).*$/,\n\t\t\t\t\t\t\tembed: '<iframe width=\"512\" height=\"288\" src=\"https://www.youtube.com/embed/$1\" frameborder=\"0\" allowfullscreen></iframe>',\n\t\t\t\t\t\t\tvideo: 'https://www.youtube.com/watch?v=$1',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdailymotion: {\n\t\t\t\t\t\t\tregex: /^(?:https?:\\/\\/(?:dai\\.ly\\/|\\w*\\.dailymotion\\.\\w{2,3}\\/video\\/)|<iframe .*?src=\".*?\\w*\\.dailymotion\\.\\w{2,3}\\/embed\\/video\\/)([a-zA-Z0-9]*).*/,\n\t\t\t\t\t\t\tembed: '<iframe width=\"512\" height=\"288\" src=\"https://www.dailymotion.com/embed/video/$1\" frameborder=\"0\" allowfullscreen></iframe>',\n\t\t\t\t\t\t\tvideo: 'https://www.dailymotion.com/video/$1',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdirect: {\n\t\t\t\t\t\t\tregex: /^(.*\\.mp4)(\\?.*)?$/,\n\t\t\t\t\t\t\tembed: '<video width=\"512\" height=\"288\" controls=\"controls\"><source src=\"$1\" type=\"video/mp4\" /></video>',\n\t\t\t\t\t\t\tvideo: '$1',\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\t// Iterate on each configured type and try to match with one configured source\n\t\t\t\t\tfor ( var type in formats ) {\n\t\t\t\t\t\tformatType = formats[type];\n\t\t\t\t\t\t// If the regex match, then we have found our source. We can then generate the embed tag & the video url\n\t\t\t\t\t\tif ( value.match( formatType.regex )) {\n\t\t\t\t\t\t\tvideodata = {\n\t\t\t\t\t\t\t\tembed: value.replace( formatType.regex, formatType.embed ),\n\t\t\t\t\t\t\t\tvideo: value.replace( formatType.regex, formatType.video ),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Set the form inputs with new values. Note that we refresh also the video url input to ensure a consistent formatting\n\t\t\t\t\tif ( videodata ) {\n\t\t\t\t\t\t$( '#mediatip_url_video_embed' ).val( videodata.embed );\n\t\t\t\t\t\t$( this ).val( videodata.video );\n\t\t\t\t\t}\n\t\t\t\t}).keyup();\n\n\t\t\t\t// On click on the validate button, extract all required data from the form\n\t\t\t\t$( '#ithoughts_tt_gl-tinymce-validate' ).click( function validate() {\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\ttype: [ 'glossary', 'tooltip', 'mediatip' ][$( '.tabs li.active' ).index()],\n\t\t\t\t\t\ttext: $( '#ithoughts_tt_gl_text' ).val(),\n\t\t\t\t\t\tlink: $( '#ithoughts_tt_gl_link' ).val(),\n\t\t\t\t\t\topts: tooltipOpts,\n\t\t\t\t\t};\n\t\t\t\t\titge.log( 'Before per-type form data handling:', data );\n\t\t\t\t\t// Depending on the target type of the tooltip, we have to retrieve specific data\n\t\t\t\t\tswitch ( data.type ) {\n\t\t\t\t\t\tcase 'glossary': {\n\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\tglossary_id:              $( '[name=\"glossary_term_id\"]' ).val(),\n\t\t\t\t\t\t\t\t// `disable_auto_translation` is related to WPML\n\t\t\t\t\t\t\t\tdisable_auto_translation: $( '[name=\"glossary_disable_auto_translation\"]' ).is( ':checked' ),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} break;\n\n\t\t\t\t\t\tcase 'tooltip': {\n\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\ttooltip_content: tinymce.EditorManager.get( 'ithoughts_tt_gl-tooltip-content' ).getContent() || $( '#ithoughts_tt_gl-tooltip-content' ).val(),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} break;\n\n\t\t\t\t\t\tcase 'mediatip': {\n\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\tmediatip_type: $( '#mediatip_type' ).val(),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// Mediatips has their own switch, depending on the type of media\n\t\t\t\t\t\t\tswitch ( data.mediatip_type ) {\n\t\t\t\t\t\t\t\tcase 'localimage': {\n\t\t\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\t\t\tmediatip_content: $( '#image-box-data' ).val(),\n\t\t\t\t\t\t\t\t\t\tmediatip_caption: $( '#mediatip_caption' ).val(),\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} break;\n\n\t\t\t\t\t\t\t\tcase 'webimage': {\n\t\t\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\t\t\tmediatip_content: $( '#mediatip_url_image' ).val(),\n\t\t\t\t\t\t\t\t\t\tmediatip_caption: $( '#mediatip_caption' ).val(),\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} break;\n\n\t\t\t\t\t\t\t\tcase 'webvideo': {\n\t\t\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\t\t\tmediatip_content: $( '#mediatip_url_video_embed' ).val(),\n\t\t\t\t\t\t\t\t\t\tmediatip_link:    $( '#mediatip_url_video_link' ).val(),\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\tcloseForm( data );\n\t\t\t\t});\n\t\t\t\t$( '.ithoughts_tt_gl-tinymce-discard' ).click( closeForm.bind( null, null ));\n\t\t\t}());\n\t\t\t// ## List form\n\t\t} else if ( 'LIST' === formType ) {\n\t\t\t( function initListForm() {\n\t\t\t\tinitTab( $( '.tabs li' ));\n\n\t\t\t\t( function initGroupsPicker() {\n\t\t\t\t\tvar $ids = $( '#groups' ),\n\t\t\t\t\t\t$text = $( '#groups_text' ),\n\t\t\t\t\t\t$groupsPicker = $( '.groupspicker' ),\n\t\t\t\t\t\t$catchEvent = $([ $groupsPicker.get( 0 ), $text.parent().get( 0 ) ]),\n\t\t\t\t\t\t$checkboxes = $( '.groupspicker .group-select input' );\n\t\t\t\t\t$text.focusin( function onGroupsPickerFocus() {\n\t\t\t\t\t\t$groupsPicker.toggleClass( 'hidden' );\n\n\t\t\t\t\t\tfunction catchEvent( e ) {\n\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfunction hide() {\n\t\t\t\t\t\t\t$groupsPicker.toggleClass( 'hidden' );\n\t\t\t\t\t\t\t$catchEvent.off( 'click', catchEvent );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$catchEvent.click( catchEvent );\n\t\t\t\t\t\t$w.one( 'click', hide );\n\t\t\t\t\t});\n\t\t\t\t\t// Enable glossary group checkboxes (for the group picker)\n\t\t\t\t\t$checkboxes.change( function onGroupCheckboxChanged() {\n\t\t\t\t\t\tvar $checked = $checkboxes.filter( ':checked' ),\n\t\t\t\t\t\t\ttexts = [],\n\t\t\t\t\t\t\tids = [];\n\n\t\t\t\t\t\t$checked.each( function checkedAppendToArray() {\n\t\t\t\t\t\t\ttexts.push( $( this ).parent().find( '.group-title' ).text());\n\t\t\t\t\t\t\tids.push( $( this ).val());\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$ids.val( ids.join( ',' ));\n\t\t\t\t\t\t$text.val( texts.join( ', ' ));\n\t\t\t\t\t}).change();\n\t\t\t\t}());\n\n\t\t\t\t$( '#ithoughts_tt_gl-tinymce-validate' ).click( function onClickValidate() {\n\t\t\t\t\t// Compose basic infos from raw datas\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\ttype:  [ 'atoz', 'list' ][$( '.tabs li.active' ).index()],\n\t\t\t\t\t\talpha: $( '#letters' ).val(),\n\t\t\t\t\t\tgroup: $( '#groups' ).val(),\n\t\t\t\t\t};\n\t\t\t\t\t// Remove useless fields\n\t\t\t\t\tif ( !data.alpha ) {\n\t\t\t\t\t\tdelete data.alpha;\n\t\t\t\t\t}\n\t\t\t\t\tif ( !data.group ) {\n\t\t\t\t\t\tdelete data.group;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Switch for particular lists (Here, atoz isn't required as it does not have any additionnal parameters. This list may be extended in the future)\n\t\t\t\t\tswitch ( data.type ) {\n\t\t\t\t\t\tcase 'list': {\n\t\t\t\t\t\t\t$.extend( data, {\n\t\t\t\t\t\t\t\tdesc: $( '#description_mode' ).val(),\n\t\t\t\t\t\t\t\tcols: $( '#columns_count' ).val(),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} break; \n\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t// Finally, return the data\n\t\t\t\t\titge.finishListTinymce( data );\n\t\t\t\t});\n\t\t\t\t$( '.ithoughts_tt_gl-tinymce-discard' ).click( function onClickDiscard() {\n\t\t\t\t\titge.finishListTinymce();\n\t\t\t\t});\n\t\t\t}());\n\t\t}\n\t});\n})( iThoughts.v5 );\n\n},{}]},{},[1]);\n"]}