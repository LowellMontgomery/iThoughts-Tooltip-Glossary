{"version":3,"sources":["../../../build/js/tinymce/tinymce.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","module","selfCalling","ithoughts","$","itg","iThoughtsTooltipGlossary","itge","iThoughtsTooltipGlossaryEditor","prefix2","prefix3","tipsTypes","tipsSelector","map","wrapTypes","join","setToggleable","element","editor","toggle","self","on","setElementActive","active","tinymce","PluginManager","add","registerTinyMCEPlugin","contentCSS","push","baseurl","glossarytermremovefct","currentNode","selection","getNode","$currentNode","$node","closest","node","get","html","innerHTML","replaceWith","beforeSetContent","event","content","replaceShortcodes","getContent","restoreShortcodes","nodeChange","fire","indexOf","getAttribute","generateSelObject","tinymceSel","sel","DOM","toArray","format","start","getStart","end","getEnd","insertInTinyMCE","shortcode","mode","select","error","insertContent","addButton","title","getLang","image","base_tinymce","onPostRender","onclick","editorForms","tip","parseHTML","list","iThoughts","v5"],"mappings":"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","file":"tinymce.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @file TinyMCE plugin scripts\n *\n * @author Gerkin\n * @copyright 2016 GerkinDevelopment\n * @license http://www.gnu.org/licenses/old-licenses/gpl-2.0.fr.html GPLv2\n * @package ithoughts-tooltip-glossary\n *\n * @version 2.7.0\n */\n\n'use strict';\n\n/* global tinymce:false, iThoughtsTooltipGlossaryEditor: false */\n\n( function selfCalling( ithoughts ) {\n\tvar $\t\t\t\t= ithoughts.$,\n\t\titg\t\t\t\t= iThoughtsTooltipGlossary,\n\t\titge\t\t\t= iThoughtsTooltipGlossaryEditor,\n\t\tprefix2\t\t\t= 'ithoughts_tt_gl_tinymce',\n\t\tprefix3\t\t\t= 'ithoughts-tooltip-glossary',\n\t\ttipsTypes\t\t= [\n\t\t\t'itg-term',\n\t\t\t'itg-tooltip',\n\t\t\t'itg-mediatip',\n\t\t],\n\t\ttipsSelector\t= tipsTypes.map( function wrapTypes( e ) {\n\t\t\treturn `[data-type=\"${  e  }\"]`;\n\t\t}).join( ',' );\n\n\tfunction setToggleable( element, editor ) {\n\t\treturn function toggle() {\n\t\t\tvar self = this;\n\t\t\teditor.on( element, function setElementActive( e ) {\n\t\t\t\tself.active( e.active );\n\t\t\t});\n\t\t};\n\t}\n\n\ttinymce.PluginManager.add( prefix2, function registerTinyMCEPlugin( editor ) {\n\t\t//CSS\n\t\teditor.contentCSS.push( `${ itg.baseurl }/css/ithoughts_tt_gl-admin.min.css?v=2.7.0` );\n\t\t/*\n\n\t\tfunction getLang(str) {\n\t\t\teditor.getLang(prefix2 + str);\n\t\t}\n*/\n\n\t\tfunction glossarytermremovefct() {\n\t\t\tvar currentNode = editor.selection.getNode(),\n\t\t\t\t$currentNode = $( currentNode ),\n\t\t\t\t$node = $currentNode.closest( tipsSelector ),\n\t\t\t\tnode = $node.get( 0 );\n\t\t\tif ( !node ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar html = node.innerHTML;\n\t\t\t$node.replaceWith( html );\n\t\t}\n\n\t\teditor.on( 'BeforeSetcontent', function beforeSetContent( event ) { //replace from shortcode to displayable html content\n\t\t\tevent.content = itge.replaceShortcodes( event.content );\n\t\t}).on( 'GetContent', function getContent( event ) { //replace from displayable html content to shortcode\n\t\t\tevent.content = itge.restoreShortcodes( event.content );\n\t\t}).on( 'NodeChange', function nodeChange( event ) {\n\t\t\tvar element = event.element;\n\t\t\tif ( $( element ).closest( tipsSelector ).length > 0 ) {\n\t\t\t\teditor.fire( 'glossaryterm', {\n\t\t\t\t\tactive: true,\n\t\t\t\t});\n\t\t\t\teditor.fire( 'glossaryterm-d', {\n\t\t\t\t\tactive: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\teditor.fire( 'glossaryterm', {\n\t\t\t\t\tactive: false,\n\t\t\t\t});\n\t\t\t\teditor.fire( 'glossaryterm-d', {\n\t\t\t\t\tactive: false,\n\t\t\t\t});\n\t\t\t}\n\t\t\tif ([ `${ prefix3  }-term_list`, `${ prefix3  }-atoz` ].indexOf( element.getAttribute( 'data-type' )) !== -1 ) {\n\t\t\t\teditor.fire( 'glossarylist', {\n\t\t\t\t\tactive: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\teditor.fire( 'glossarylist', {\n\t\t\t\t\tactive: false,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\n\t\tfunction generateSelObject() {\n\t\t\tvar tinymceSel = editor.selection,\n\t\t\t\tsel = {\n\t\t\t\t\tDOM: $( tinymceSel.getNode()).closest( tipsSelector ).toArray(),\n\t\t\t\t};\n\t\t\tsel.html = tinymceSel.getContent({\n\t\t\t\tformat: 'html',\n\t\t\t});\n\t\t\tsel.start = tinymceSel.getStart();\n\t\t\tsel.end = tinymceSel.getEnd();\n\t\t\treturn sel;\n\t\t}\n\t\tfunction insertInTinyMCE( shortcode, mode ) {\n\t\t\t// Insert content when the window form is submitted\n\t\t\tif ( 'load' === mode ) {\n\t\t\t\teditor.selection.select( editor.selection.getStart());\n\t\t\t} else if ( mode.indexOf( 'extend' ) > -1 ) {\n\t\t\t\titge.error( 'Unhandled mode \"extend\" during writing of new tooltip shortcode' );\n\t\t\t}\n\t\t\teditor.insertContent( shortcode );\n\t\t}\n\n\t\t// Add a button that opens a window\n\t\teditor.addButton( 'glossaryterm', {\n\t\t\ttitle:        editor.getLang( `${ prefix2  }.add_tooltip` ),\n\t\t\timage:        `${ itge.base_tinymce }/icon/glossaryterm.png`,\n\t\t\tonPostRender: setToggleable( 'glossaryterm', editor ),\n\t\t\tonclick:      function onclick() {\n\t\t\t\titge.editorForms.tip( generateSelObject(), insertInTinyMCE );\n\t\t\t},\n\t\t});\n\t\t// Add the equivalent delete button\n\t\teditor.addButton( 'glossaryterm-d', {\n\t\t\ttitle:        editor.getLang( `${ prefix2  }.remove_tooltip` ),\n\t\t\timage:        `${ itge.base_tinymce  }/icon/glossaryterm-d.png`,\n\t\t\tonPostRender: setToggleable( 'glossaryterm-d', editor ),\n\t\t\tonclick:      glossarytermremovefct,\n\t\t});\n\n\t\teditor.addButton( 'glossarylist', {\n\t\t\ttitle:\t\t\t     editor.getLang( `${ prefix2  }.add_index` ),\n\t\t\timage:\t\t\t     `${ itge.base_tinymce }/icon/glossaryindex.png`,\n\t\t\tonPostRender:\tsetToggleable( 'glossarylist', editor ),\n\t\t\tonclick:\t\t    function onclick() {\n\t\t\t\tvar sel = {\n\t\t\t\t\tselection: editor.selection,\n\t\t\t\t};\n\t\t\t\tsel.start = sel.selection.getStart();\n\t\t\t\tsel.end = sel.selection.getEnd();\n\t\t\t\tsel.DOM = $.parseHTML( sel.selection );\n\t\t\t\titge.editorForms.list( generateSelObject(), insertInTinyMCE );\n\t\t\t},\n\t\t});\n\t});\n}( iThoughts.v5 ));\n\n},{}]},{},[1]);\n"]}